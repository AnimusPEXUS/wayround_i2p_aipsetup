#!/usr/bin/python

import os
import os.path
import sys
import glob
import subprocess
import shutil

import aipsetup.utils
import aipsetup.getopt2

def print_help():
    print """\
   usage: %(basename)s [command] [command_parameters]

   commands:

      info          pkg info files actions
      build_info    build info files actions
      builders      builder files actions

      source        Source actions
      build         Building actions
      server        UHT server related actions
      client        Download actions
      pkgindex      Package index actions


      help      see this help
      version   version info
""" % {
        'basename': os.path.basename(__file__)
        }
    return


config = aipsetup.utils.load_config()
if config == None:
    print "-e- configuration file error exiting"
    exit(1)

ret = 0


optilist, args = aipsetup.getopt2.getopt(sys.argv[1:])
args_l = len(args)


if args_l == 0:
    print "-e- no commands or parameters passed. try aipsetup help"
    exit(1)
else:

    if args[0] == 'help':
        print_help()

    elif args[0] == 'builders':
        import aipsetup.pkgbuilders

        ret = aipsetup.pkgbuilders.router(optilist, args[1:], config)

    elif args[0] == 'build':
        import aipsetup.build

    elif args[0] == 'client':
        import aipsetup.client

        ret = aipsetup.client.router(optilist, args[1:], config)

    elif args[0] == 'pkgindex':
        import aipsetup.pkgindex

        ret = aipsetup.pkgindex.router(optilist, args[1:], config)

    elif args[0] == 'info':
        import aipsetup.info

        ret = aipsetup.info.router(optilist, args[1:], config)

    elif args[0] == 'server':
        import aipsetup.server

        ret = aipsetup.server.router(optilist, args[1:], config)

    else:
        print "-e- wrong command. try aipsetup help"

exit(ret)
